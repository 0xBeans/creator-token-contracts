variables:
  SSH_PRIVATE_KEY: "$GITHUB_DEPLOY_KEY"
  GIT_STRATEGY: clone
  NPM_CONFIG: "$NPM_CONFIG"

stages:
 - install_foundry
 - code_coverage
 - run_tests 
 - push_to_github
 - build_push_npm 

before_script:
  - apt-get update -y
  - apt-get install -y curl
  - curl -L https://foundry.paradigm.xyz | bash
  - source /root/.bashrc
  - foundryup

code_coverage:
  retry:
    max: 2
  stage: code_coverage
  image: 
    name: node:18.16.0
  services:
   - docker:dind
  script:
    - npm install hardhat-foundry
    - echo "Installing lcov and genhtml for coverage reports..."
    - apt-get update -y && apt-get install -y lcov   # This line installs lcov
    - forge coverage --report lcov
    - lcov --remove ./lcov.info -o ./lcov.info.pruned '/test/mocks/*' 'test/mocks/*'
    - genhtml -o coverage/ --branch-coverage lcov.info.pruned
    - echo "Deploying to GitLab Pages..."
    - mkdir .coverage
    - cp -r coverage/* .coverage
    - mv .coverage coverage
  artifacts:
    paths:
      - coverage
  tags:
    - infra-docker
  rules:
    - if: $CI_COMMIT_REF_NAME != 'public-release'

run_tests:
  retry:
    max: 2
  stage: run_tests
  image: 
    name: node:18.16.0
  services:
   - docker:dind
  script:
    - npm install hardhat-foundry
    - forge build
    - forge test
  tags:
    - infra-docker
  rules:
    - if: $CI_COMMIT_REF_NAME != 'public-release'

push_repo_github:
  retry:
    max: 2
  stage: push_to_github
  image: 
    name: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  services:
  - docker:dind
  before_script:
    - apt-get update && apt-get install openssh-client git  -y
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  script:
    - |
      cd /builds/limit-break/creator-token-contracts
      chmod 666 /builds/limit-break/creator-token-contracts
      TAG=$(cat package.json | grep version | awk -F': ' '{print $2}')
      export GIT_SSH_COMMAND="ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"
      git config --global user.email "ci@infra.limitbreak.com"
      git config --global user.name "CI LB Infra"
      git config pull.rebase false 
      git config -l
      git remote add github_origin git@github.com:limitbreakinc/creator-token-contracts.git
      git checkout $CI_COMMIT_REF_NAME
      chown -R git:git /builds/limit-break/creator-token-contracts
      git rm .gitlab-ci.yml && git commit -m "removing ci file"
      echo "git status"
      git status
      echo "git pull --set-upstream github_origin main --allow-unrelated-histories --no-edit"
      git pull --set-upstream github_origin main --allow-unrelated-histories --no-edit
      echo "git status"
      git status
      echo "git gc"
      git gc
      echo "git fsck"
      git fsck
      echo "git status"
      git status
      echo "git checkout main && git merge $CI_COMMIT_REF_NAME"
      git checkout main && git merge $CI_COMMIT_REF_NAME
      echo "git branch"
      git branch
      echo "git push github_origin main"
      git push --force --no-thin github_origin main 
      echo "git tag -fa $TAG -m 'version: ${TAG}'"
      git tag -fa $TAG -m "version: ${TAG}"
      echo "git push github_origin --tags"
      git push github_origin --tags
  rules:
    - if: $CI_COMMIT_REF_NAME == 'public-release'
      when: manual

build_push_npm:
  retry:
    max: 2
  stage: build_push_npm
  image: 
    name: node:18.16.0
  services:
  - docker:dind
  script:
   - echo $NPM_CONFIG > ~/.npmrc
   - npm whoami
   - npm publish ./limitbreak-creator-token-contracts-1.1.1.tgz --access public
  tags:
    - infra-docker
  rules:
    - if: $CI_COMMIT_REF_NAME == 'public-release'
      when: manual
