variables:
  SSH_PRIVATE_KEY: "$GITHUB_DEPLOY_KEY"
  GIT_STRATEGY: clone

stages:
 - run_tests
 - code_coverage
 - push_to_github
 - build_push_npm 

run_tests:
  retry:
    max: 2
  stage: run_tests
  image: 
    name: node:16.18
  services:
   - docker:dind
  script:
    - npm install
    - npx hardhat compile
    - npx hardhat test
  tags:
    - infra-docker
  rules:
    - if: $CI_COMMIT_REF_NAME != 'public-release'

code_coverage:
  retry:
    max: 2
  stage: code_coverage
  image: 
    name: node:16.18
  services:
   - docker:dind
  script:
    - npm install
    - npx hardhat compile
    - npx hardhat coverage
  artifacts:
    paths:
      - coverage
  tags:
    - infra-docker
  rules:
    - if: $CI_COMMIT_REF_NAME != 'public-release'

push_repo_github:
  retry:
    max: 2
  stage: push_to_github
  image: 
    name: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  services:
  - docker:dind
  before_script:
    - apt install openssh-client git  -y
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  script:
    - |
      cd /builds/limit-break/creator-token-contracts
      TAG=$(cat package.json | grep version | awk -F': ' '{print $2}')
      export GIT_SSH_COMMAND="ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"
      git config --global user.email "ci@infra.limitbreak.com"
      git config --global user.name "CI LB Infra"
      git remote add github_origin git@github.com:limitbreakinc/creator-token-contracts.git
      git checkout $CI_COMMIT_REF_NAME
      git rm .gitlab-ci.yml && git commit -m "removing ci file"
      git pull --set-upstream github_origin main --allow-unrelated-histories --no-edit
      git checkout main && git main $CI_COMMIT_REF_NAME
      git push github_origin main
      git tag -fa $TAG -m "version: ${TAG}"
      git push github_origin --tags
  rules:
    - if: $CI_COMMIT_REF_NAME == 'public-release'
      when: manual

build_push_npm:
  needs:
    - job: push_repo_github
  retry:
    max: 2
  stage: build_push_npm
  image: 
    name: node:16.18
  services:
  - docker:dind
  script:
   - npm install
   - npm publish --access public
  rules:
    - if: $CI_COMMIT_REF_NAME == 'public-release'
      when: manual
